<#@ include file="VariableTemplate.tt" #>
<#@ include file="SchemaObjectTemplate.tt" #>
<#@ include file="HierarchyModelTemplate.tt" #>

<#+
// <copyright file="ConstantsGenerator.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class ConstantsGenerator : Generator
{
	public XDocument DataTypesDoc;
	public XDocument ComponentsDoc;
	public XDocument HierarchiesDoc;
	public XDocument ModelDoc;

	protected override void RunCore()
	{
		var variableTemplate = new VariableTemplate();
		var schemaObjectTemplate = new SchemaObjectTemplate();

		var stereotypes = ComponentsDoc.Descendants("Stereotype");
		var prefix = ModelDoc.Root.Attribute("Prefix").Value;
		Dictionary<String, XElement> dataTypes = DataTypesDoc.Root.Elements().ToDictionary(x => x.Attribute("Name").Value, x => x);

		schemaObjectTemplate.Schema = prefix;
		schemaObjectTemplate.Stereotypes = stereotypes.Select(s => s.Attribute("Name").Value);
		var objModelOutput = String.Format("{0}.Objects.cs", prefix);
		schemaObjectTemplate.RenderToFile(objModelOutput);

		foreach(XElement stereotypeElement in stereotypes)
		{
			var objectName = stereotypeElement.Attribute("Name").Value;
			var output = String.Format("{0}.{1}Variables.cs", prefix, objectName);
			variableTemplate.Schema = prefix;
			variableTemplate.Stereotype = objectName;
			variableTemplate.Variables = stereotypeElement.Elements("Variable");
			variableTemplate.DataTypes = dataTypes;
			variableTemplate.RenderToFile(output);
		}

		var hierarchyTemplate = new HierarchyModelTemplate 
		{
			Schema = prefix,
			Hierarchies = HierarchiesDoc.Descendants("Hierarchy")
		};

		var hModelOutput = String.Format("{0}Hierarchies.cs", prefix);
		hierarchyTemplate.RenderToFile(hModelOutput);
	}
}
#>
