<#@ include file="ObjectEntityTemplate.tt" #>
<#@ include file="ObjectVariableTemplate.tt" #>
<#+
// <copyright file="EntitiesGenerator.tt" company="">
//  Copyright © Michael Matveev. All Rights Reserved.
// </copyright>

public class EntitiesGenerator : Generator
{
	public XDocument DataTypesDoc;
	public XDocument ComponentsDoc;
	public XDocument HierarchiesDoc;

	protected override void RunCore()
	{
		Dictionary<String, XElement> dataTypes = DataTypesDoc.Root.Elements().ToDictionary(x => x.Attribute("Name").Value, x => x);
		String prefix = ComponentsDoc.Root.Attribute("Prefix").Value;

		ObjectEntityTemplate objectEntityTemplate = new ObjectEntityTemplate 
		{
			Schema = prefix
		};
		
		ObjectVariableTemplate objectVariableTemplate = new ObjectVariableTemplate 
		{
			Schema = prefix
		};

		foreach(XElement stereotypeElement in ComponentsDoc.Descendants("Stereotype")) 
		{
			var objectName = stereotypeElement.Attribute("Name").Value;
			var output = String.Format("{0}.{1}.cs", prefix, objectName);
			 
			objectEntityTemplate.Stereotype = stereotypeElement;
			objectEntityTemplate.RenderToFile(output);

			foreach(XElement variableElement in 
				stereotypeElement
				.Elements("Variable")
				.Where(v => v.Attribute("Versioned")?.Value == "True"))
			{
				var varName = variableElement.Attribute("Name").Value;
				output = String.Format("{0}.{1}_{2}.cs", prefix, objectName, varName);
				
				objectVariableTemplate.Stereotype = objectName;
				objectVariableTemplate.Variable = variableElement;
				objectVariableTemplate.RenderToFile(output);
			}
		}

	}
}
#>
