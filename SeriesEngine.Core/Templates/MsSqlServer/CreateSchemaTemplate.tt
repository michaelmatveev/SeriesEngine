<#+
    public class CreateSchemaTemplate : CSharpTemplate
    {
        public String Schema;
	    public override string TransformText()
	    {
#>
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'<#= Schema #>')
EXEC ('CREATE SCHEMA <#= Schema #>');
GO

-- drop all constraints
DECLARE @str VARCHAR(max)
DECLARE cur CURSOR FOR
SELECT 'ALTER TABLE ' + '[' + s.[NAME] + '].[' + t.name + '] DROP CONSTRAINT ['+ c.name + ']'
FROM sys.objects c, sys.objects t, sys.schemas s
WHERE c.type IN ('C', 'F', 'PK', 'UQ', 'D')
AND c.parent_object_id=t.object_id and t.type='U' AND t.SCHEMA_ID = s.schema_id
ORDER BY c.type

OPEN cur
FETCH NEXT FROM cur INTO @str
WHILE (@@fetch_status = 0) BEGIN
 --PRINT @str
 EXEC (@str)
 FETCH NEXT FROM cur INTO @str
END

CLOSE cur
DEALLOCATE cur;
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID('[dbo].[Solutions]') AND type = 'U')
DROP TABLE [dbo].[Solutions];
GO

CREATE TABLE [dbo].[Solutions] (
    "Id" INT IDENTITY(1, 1) NOT NULL PRIMARY KEY,
    "Name" NVARCHAR(128) NOT NULL,
	"ModelName" NVARCHAR(128) NOT NULL,
	"Description" NVARCHAR(MAX) NULL
);
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID('[dbo].[Users]') AND type = 'U')
DROP TABLE [dbo].[Users];
GO

CREATE TABLE [dbo].[Users] (
    "Id" INT IDENTITY(1, 1) NOT NULL PRIMARY KEY,
    "LastName" NVARCHAR(128) NOT NULL,
	"FirstName" NVARCHAR(128) NOT NULL,
	"MiddleName" NVARCHAR(128) NOT NULL,
	"IsSystem" BIT NULL
);
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID('[dbo].[StoredQueries]') AND type = 'U')
DROP TABLE [dbo].[StoredQueries];
GO

CREATE TABLE [dbo].[StoredQueries] (
    "Id" INT IDENTITY(1, 1) NOT NULL PRIMARY KEY,
    "Name" NVARCHAR(128) NOT NULL,
	"ModelName" NVARCHAR(128) NOT NULL,
	"ConcurrencyStamp" TIMESTAMP NOT NULL,
	"Text" NVARCHAR(MAX),
	"AuthorId" INT
);
GO

ALTER TABLE [dbo].[StoredQueries] WITH NOCHECK 
ADD CONSTRAINT [FK_dbo_StoredQueries_Users] FOREIGN KEY("AuthorId")
REFERENCES [dbo].[Users] ("Id");
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID('[dbo].[Networks]') AND type = 'U')
DROP TABLE [dbo].[Networks];
GO

CREATE TABLE [dbo].[Networks] (
    "Id" INT IDENTITY(1, 1) NOT NULL PRIMARY KEY,
    "Name" NVARCHAR(128) NOT NULL,
	"NodeType" NVARCHAR(128) NOT NULL,
    "Description" NVARCHAR(MAX) NULL,
	"IsSystem" BIT NULL,
	"CollectionType" INT,
	"SolutionId" INT NOT NULL,
    "Tag" INT NULL,
	"Revision" INT NOT NULL DEFAULT 0, 
    "ConcurrencyStamp" ROWVERSION NOT NULL 
);
GO

ALTER TABLE [dbo].[Networks] WITH CHECK ADD CONSTRAINT [FK_Networks_Solutions] FOREIGN KEY([SolutionId])
REFERENCES [dbo].[Solutions] ([Id])
ON DELETE CASCADE;
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID('[dbo].[PathSearchPattern]') AND type = 'FN')
DROP FUNCTION [dbo].[PathSearchPattern];
GO

CREATE FUNCTION [dbo].[PathSearchPattern] 
(
	@Path VARCHAR(max),
	@n INT
)
RETURNS VARCHAR(MAX)
AS
BEGIN
    DECLARE @i INT = 1, @s INT = 1
	DECLARE @result VARCHAR(max)

    WHILE @s <> 0
    BEGIN
		SELECT @s = CHARINDEX('|', @Path, @s + 1)
		IF @s = 0
		BEGIN
			SELECT @result = @Path + '%'
		END
		ELSE
		BEGIN
			IF @i = @n
			BEGIN
				SELECT @result = LEFT(@Path, @s - 1)
				SELECT @s = 0
			END
		END
        SELECT @i = @i+1
    END

	RETURN @result

END
GO

<#+
            return this.GenerationEnvironment.ToString();
	    }
    }
#>
